{"version":3,"sources":["redux/context.js","redux/store.js","redux/index.js","components/GlslCanvas.js","components/Form.js","shader/SimpleOperations.js","App.js","reportWebVitals.js","index.js"],"names":["ReduxContext","React","createContext","withRedux","Component","props","Consumer","store","createStore","action","img","uniform","CanvasRef","useRef","useEffect","canvas","Canvas","current","vertexString","shader","vertex","fragmentString","fragment","updateCanvas","state","getState","loadTexture","setUniforms","listener","subscribe","handleResize","image","deviceWidth","window","innerWidth","style","width","Math","min","height","resize","addEventListener","removeEventListener","destroy","ref","useState","setState","dispatch","type","form","images","bnw","negative","binary","binaryValue","brightness","u_doGray","u_doNegative","u_doBinary","u_binaryT","u_brightness","FormGroup","FormControl","variant","InputLabel","id","Select","labelId","value","onChange","e","target","label","map","v","idx","MenuItem","src","alt","FormControlLabel","control","Checkbox","checked","inputProps","Slider","disabled","color","valueLabelDisplay","step","max","newValue","Typography","gutterBottom","App","Grid","container","justifyContent","alignItems","spacing","item","xs","sm","md","lg","xl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.0dab0cea.chunk.js","sourcesContent":["import React from 'react';\n\nconst ReduxContext = React.createContext(null);\n\nexport const withRedux = Component => props => (\n  <ReduxContext.Consumer>\n    {store => <Component {...props} store={store} />}\n  </ReduxContext.Consumer>\n);\n\nexport default ReduxContext;\n","import { createStore } from 'redux';\n\nfunction store() {\n  return createStore((state = {\n    img: '',\n    uniform: {}\n  }, action) => ({\n    img: action.img,\n    uniform: action.uniform\n  }));\n}\n\nexport default store;","import ReduxContext, { withRedux } from \"./context\";\nimport store from \"./store\";\n\nexport default store;\n\nexport { ReduxContext, withRedux };\n","import React, { useEffect, useRef } from \"react\";\nimport { Canvas } from \"glsl-canvas-js\";\nimport { withRedux } from \"../redux\";\n\nfunction resize(canvas, image) {\n  const deviceWidth = window.innerWidth / 480;\n  canvas.style.width = Math.min(400 * deviceWidth, 480) + \"px\";\n  canvas.style.height = Math.min(300 * deviceWidth, 360) + \"px\";\n}\n\nfunction GlslCanvas(props) {\n  const CanvasRef = useRef();\n\n  useEffect(() => {\n    const canvas = new Canvas(CanvasRef.current, {\n      vertexString: props.shader.vertex,\n      fragmentString: props.shader.fragment\n    });\n\n    const updateCanvas = () => {\n      const state = props.store.getState();\n\n      canvas.loadTexture('u_img', state.img);\n\n      canvas.setUniforms(state.uniform);\n    }\n    const listener = props.store.subscribe(updateCanvas);\n    updateCanvas();\n\n    const handleResize = () => resize(CanvasRef.current, props.store.getState().img);\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      listener();\n      canvas.destroy();\n    };\n  }, [props.store, props.shader]);\n\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <canvas\n        ref={CanvasRef}\n      ></canvas>\n    </div>\n  )\n}\n\nexport default withRedux(GlslCanvas);\n","import { useState } from \"react\";\nimport { withRedux } from \"../redux\";\n\nfunction Form(props) {\n  const [state, setState] = useState(props.state);\n\n  props.store.dispatch({\n    type: 'UPDATE',\n    ...props.dispatch(state, props.store.getState())\n  });\n\n  return props.form(state, setState);\n}\n\nexport default withRedux(Form);","import {\n  Typography,\n  FormGroup,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  Slider,\n  InputLabel,\n  Select,\n  MenuItem\n} from \"@material-ui/core\";\n\nconst images = [\n  '/gl-image-processing/sample/Chrysanthemum.jpg',\n  '/gl-image-processing/sample/Desert.jpg',\n  '/gl-image-processing/sample/Hydrangeas.jpg',\n  '/gl-image-processing/sample/Jellyfish.jpg',\n  '/gl-image-processing/sample/Koala.jpg',\n  '/gl-image-processing/sample/Lighthouse.jpg',\n  '/gl-image-processing/sample/Penguins.jpg',\n  '/gl-image-processing/sample/Tulips.jpg',\n];\n\nexport const state = {\n  img: images[0],\n  bnw: false,\n  negative: false,\n  binary: false,\n  binaryValue: 120,\n  brightness: 0\n}\n\nexport const dispatch = (state) => ({\n  img: state.img,\n  uniform: {\n    u_doGray: state.bnw,\n    u_doNegative: state.negative,\n    u_doBinary: state.binary,\n    u_binaryT: state.binaryValue / 255.0,\n    u_brightness: state.brightness / 255.0\n  }\n})\n\nexport const form = (state, setState) => (\n  <FormGroup>\n    <FormControl variant=\"outlined\">\n      <InputLabel id=\"demo-simple-select-outlined-label\">Pilih gambar</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-outlined-label\"\n        id=\"demo-simple-select-outlined\"\n        value={state.img}\n        onChange={e => setState({\n          ...state,\n          img: e.target.value\n        })}\n        label=\"Pilih gambar\"\n      >\n        {images.map((v, idx) => (<MenuItem key={idx} value={v}>\n          <img src={v} alt={v} height={25} /> {v}\n        </MenuItem>))}\n      </Select>\n    </FormControl>\n    <FormControlLabel\n      control={<Checkbox\n        checked={state.bnw}\n        onChange={e => setState({\n          ...state,\n          bnw: e.target.checked\n        })}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />}\n      label='Hitam putih'\n    />\n    <FormControlLabel\n      control={<Checkbox\n        checked={state.negative}\n        onChange={e => setState({\n          ...state,\n          negative: e.target.checked\n        })}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />}\n      label='Negatif'\n    />\n    <FormControlLabel\n      control={<Checkbox\n        checked={state.binary}\n        onChange={e => setState({\n          ...state,\n          binary: e.target.checked\n        })}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />}\n      label='Binerisasi'\n    />\n    <Slider\n      disabled={!state.binary}\n      color='secondary'\n      value={state.binaryValue}\n      valueLabelDisplay=\"auto\"\n      step={1}\n      min={0}\n      max={255}\n      onChange={(e, newValue) =>\n        (newValue >= 0 && newValue <= 255) && setState({\n          ...state,\n          binaryValue: newValue\n        })}\n    />\n    <FormControl>\n      <Typography id=\"brightness-slider\" gutterBottom>\n        Kecerahan\n      </Typography>\n      <Slider\n        aria-labelledby='brightness-slider'\n        value={state.brightness}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        min={0}\n        max={255}\n        onChange={(e, newValue) =>\n          (newValue >= 0 && newValue <= 255) && setState({\n            ...state,\n            brightness: newValue\n          })}\n      />\n    </FormControl>\n  </FormGroup>\n);\n\nexport const vertex = `\nattribute vec2 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_normal;\nattribute vec2 a_color;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_normal;\nvarying vec2 v_color;\n\nvoid main() {\n  gl_Position = vec4(a_position, 0.0, 1.0);\n\n  v_texcoord = a_texcoord;\n  v_normal = a_normal;\n  v_color = a_color;\n}\n`\n\nexport const fragment = `\nprecision lowp float;\n\nuniform sampler2D u_img;\n\nuniform bool u_doGray;\nuniform bool u_doNegative;\nuniform bool u_doBinary;\n\nuniform float u_binaryT;\nuniform float u_brightness;\n\nvarying vec2 v_texcoord;\n\nfloat rgbtobw (vec3 imgin) {\n  return dot(imgin, vec3(1.0/3.0));\n}\n\nvec3 clipping (vec3 imgin) {\n  return max(min(imgin, 1.0), 0.0);\n}\n\nvec3 brightnessfunc (vec3 imgin) {\n  return clipping(imgin + u_brightness);\n}\n\nvec3 binaryfunc (vec3 imgin) {\n  float gray = rgbtobw(imgin);\n  if(gray < u_binaryT){\n    return vec3(0.0);\n  } else {\n    return vec3(1.0);\n  }\n}\n\nvec3 negativefunc (vec3 imgin) {\n  return 1.0 - imgin;\n}\n\nvoid main(){\n  vec4 texture = texture2D(u_img, v_texcoord);\n  vec3 rgb = texture.rgb;\n\n  if(u_doGray){\n    rgb = vec3(rgbtobw(rgb));\n  }\n\n  rgb = brightnessfunc(rgb);\n\n  if(u_doBinary){\n    rgb = binaryfunc(rgb);\n  }\n\n  if(u_doNegative){\n    rgb = negativefunc(rgb);\n  }\n\n  gl_FragColor = vec4(rgb, texture.a);\n}\n`;\n","import { Grid } from \"@material-ui/core\";\nimport GlslCanvas from \"./components/GlslCanvas\";\nimport Form from \"./components/Form\";\nimport { fragment, vertex, state, dispatch, form } from './shader/SimpleOperations'\n\nfunction App() {\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <GlslCanvas shader={{fragment, vertex}} />\n      </Grid>\n      <Grid item xs={10} sm={10} md={10} lg={6} xl={4}>\n        <Form form={form} state={state} dispatch={dispatch} />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store, { ReduxContext } from './redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReduxContext.Provider value={store()}>\n      <App />\n    </ReduxContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}